import type { Size } from '@statoscope/stats-extension-compressed/dist/generator';
import type { Instance } from '@statoscope/stats-extension-package-info/dist/generator';
import Graph, { PathSolution } from '@statoscope/helpers/dist/graph';
import type { Item } from '@statoscope/stats-extension-stats-validation-result/dist/generator';
import { RelationItem } from '@statoscope/types/types';
import { RuleDescriptor } from '@statoscope/types/types/validation/api';
import { Report } from '@statoscope/types/types/custom-report';
import { Webpack } from '../webpack';
import { moduleNameResource, moduleReasonResource, moduleResource, nodeModule } from './module';
import { ModuleGraphNodeData, NodeModuleInstance, NormalizedAsset, NormalizedChunk, NormalizedCompilation, NormalizedEntrypointItem, NormalizedExtension, NormalizedFile, NormalizedModule, NormalizedPackage, NormalizeResult } from './normalize';
import { Node as FoamTreeNode } from './modules-to-foam-tree';
import ChunkID = Webpack.ChunkID;
export declare type ResolvedStats = {
    file: NormalizedFile;
    compilation: NormalizedCompilation;
};
export declare type ResolvedRelatedItem = {
    type: 'module';
    item: NormalizedModule | null;
} | {
    type: 'chunk';
    item: NormalizedChunk | null;
} | {
    type: 'resource';
    item: NormalizedAsset | null;
} | {
    type: 'entry';
    item: NormalizedEntrypointItem | null;
} | {
    type: 'compilation';
    item: NormalizedCompilation | null;
} | {
    type: 'package';
    item: NormalizedPackage | null;
} | {
    type: 'package-instance';
    item: NodeModuleInstance | null;
};
export default function (normalizeResult: NormalizeResult): {
    moduleSize(module: NormalizedModule): number;
    chunkName(chunk: NormalizedChunk): string;
    getTotalFilesSize: (asset: NormalizedAsset, hash?: string | undefined, compressed?: boolean | undefined) => number;
    resolveChunk(id: ChunkID, compilationHash: string): NormalizedChunk | null;
    resolveAsset(id: string, compilationHash: string): NormalizedAsset | null;
    resolveModule(id: string, compilationHash: string): NormalizedModule | null;
    resolvePackage(id: string, compilationHash: string): NormalizedPackage | null;
    resolveEntrypoint(id: string, compilationHash: string): NormalizedEntrypointItem | null;
    resolveFile(id: string): NormalizedFile | null;
    resolveInputFile(): NormalizedFile | null;
    resolveReferenceFile(): NormalizedFile | null;
    resolveStat(id: string): ResolvedStats | null;
    resolveCompilation(id: string): NormalizedCompilation | null;
    resolveExtension(id: string, fileName: string): NormalizedExtension<unknown, unknown> | null;
    resolveExtensionByCompilation(id: string, hash: string): NormalizedExtension<unknown, unknown> | null;
    getModuleSize(module: NormalizedModule, hash?: string | undefined, compressed?: boolean | undefined): Size;
    getAssetSize(asset: NormalizedAsset, hash?: string | undefined, compressed?: boolean | undefined): Size;
    getPackageInstanceInfo(packageName: string, instancePath: string, hash: string): Instance | null;
    moduleResource: typeof moduleResource;
    moduleReasonResource: typeof moduleReasonResource;
    moduleNameResource: typeof moduleNameResource;
    nodeModule: typeof nodeModule;
    statName(stat?: ResolvedStats | undefined): string;
    getModuleGraph(hash: string): Graph<ModuleGraphNodeData> | null;
    moduleGraph_getEntrypoints(module?: NormalizedModule | null | undefined, graph?: Graph<ModuleGraphNodeData> | undefined, entrypoints?: NormalizedEntrypointItem[] | undefined, max?: number): NormalizedEntrypointItem[];
    moduleGraph_getPaths(from?: NormalizedModule | undefined, graph?: Graph<ModuleGraphNodeData> | undefined, to?: NormalizedModule | undefined, max?: number): PathSolution<ModuleGraphNodeData> | null;
    modulesToFoamTree(modules: NormalizedModule[], hash?: string | undefined, compressed?: boolean | undefined): FoamTreeNode;
    validation_getItems(hash?: string | undefined, relatedType?: "module" | "entry" | "package" | "package-instance" | "resource" | "compilation" | "chunk" | null | undefined, relatedId?: string | number | undefined): Item[];
    validation_getItem(id?: number | undefined, hash?: string | undefined): Item | null;
    validation_resolveRelatedItem(item?: RelationItem | undefined, hash?: string | undefined): ResolvedRelatedItem;
    validation_resolveRule(name?: string | undefined, hash?: string | undefined): RuleDescriptor | null;
    customReports_getItems(file: string, hash?: string | null | undefined, relatedType?: "module" | "entry" | "package" | "package-instance" | "resource" | "compilation" | "chunk" | null | undefined, relatedId?: string | number | undefined): Report<unknown, unknown>[];
    customReports_getItem(id: string, file: string): Report<unknown, unknown> | null;
};
